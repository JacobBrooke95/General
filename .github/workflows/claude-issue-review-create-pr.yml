name: Claude Issue Review and Auto PR

on:
  issues:
    types: [opened]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  actions: read

jobs:
  claude-review-and-create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Validate issue data
        id: validate
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          # Validate that title is not empty
          if [ -z "$ISSUE_TITLE" ]; then
            echo "Error: Issue title is empty"
            exit 1
          fi
          echo "validated=true" >> $GITHUB_OUTPUT

      - name: Set up branch name
        id: branch-name
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          # Create a branch name from the issue number and title
          ISSUE_NUMBER=${{ github.event.issue.number }}
          # Clean the title: lowercase, replace spaces with hyphens, remove special chars
          CLEAN_TITLE=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9 -]//g' | sed 's/ /-/g' | cut -c1-50)
          BRANCH_NAME="issue-${ISSUE_NUMBER}-${CLEAN_TITLE}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Created branch name: $BRANCH_NAME"

      - name: Check if branch exists
        id: check-branch
        run: |
          git fetch origin
          if git show-ref --verify --quiet "refs/remotes/origin/${{ steps.branch-name.outputs.branch_name }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Branch already exists, will use a unique name"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create unique branch name if needed
        id: final-branch
        run: |
          if [ "${{ steps.check-branch.outputs.exists }}" = "true" ]; then
            TIMESTAMP=$(date +%s)
            BRANCH_NAME="${{ steps.branch-name.outputs.branch_name }}-${TIMESTAMP}"
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
            echo "Using unique branch name: $BRANCH_NAME"
          else
            echo "branch_name=${{ steps.branch-name.outputs.branch_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create and push new branch
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b ${{ steps.final-branch.outputs.branch_name }}

          # Create a placeholder file to make the branch valid
          mkdir -p .github/issues
          ISSUE_FILE=".github/issues/issue-${{ github.event.issue.number }}.md"

          # Write to file safely using cat with heredoc
          cat > "$ISSUE_FILE" << EOF
# Working on Issue #${{ github.event.issue.number }}

**Issue Title:** ${ISSUE_TITLE}

**Issue Description:**
${ISSUE_BODY:-(No description provided)}

---

## Claude Review

Claude will review this issue and provide analysis in the pull request.
EOF

          git add .
          git commit -m "Initialize branch for issue #${{ github.event.issue.number }}"
          git push origin ${{ steps.final-branch.outputs.branch_name }}

      - name: Create Pull Request
        id: create-pr
        env:
          GH_TOKEN: ${{ github.token }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          # Create PR body file
          cat > /tmp/pr_body.md << EOF
## Addresses Issue #${{ github.event.issue.number }}

**Original Issue:** ${ISSUE_TITLE}

### Issue Description
${ISSUE_BODY:-(No description provided)}

---

### Changes

Claude will review this issue and provide implementation guidance.

### Checklist
- [ ] Code changes implemented
- [ ] Tests added/updated
- [ ] Documentation updated
- [ ] Ready for review

Closes #${{ github.event.issue.number }}
EOF

          # Get base branch (with fallback)
          BASE_BRANCH="${{ github.event.repository.default_branch }}"
          BASE_BRANCH=${BASE_BRANCH:-main}

          # Create the pull request
          if PR_URL=$(gh pr create \
            --title "Fix: $ISSUE_TITLE" \
            --body-file /tmp/pr_body.md \
            --base "$BASE_BRANCH" \
            --head ${{ steps.final-branch.outputs.branch_name }} \
            --json url --jq .url); then
            echo "pr_created=true" >> $GITHUB_OUTPUT
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
            echo "Created PR: $PR_URL"

            # Extract PR number from URL
            PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

            # Add labels if they exist (ignore errors if labels don't exist)
            gh pr edit "$PR_URL" --add-label "automated,claude-review" 2>/dev/null || echo "Note: Could not add labels"
          else
            echo "pr_created=false" >> $GITHUB_OUTPUT
            echo "Failed to create PR"
            exit 1
          fi

      - name: Run Claude Code Review
        id: claude-review
        if: steps.create-pr.outputs.pr_created == 'true'
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            ISSUE NUMBER: ${{ github.event.issue.number }}
            PR NUMBER: ${{ steps.create-pr.outputs.pr_number }}
            BRANCH: ${{ steps.final-branch.outputs.branch_name }}

            An issue has been opened and a pull request has been automatically created. Please:

            1. Review the issue description and requirements
            2. Analyze what needs to be implemented
            3. Provide implementation guidance and suggestions
            4. Comment on the PR with your analysis using `gh pr comment`

            Your review should include:
            - Understanding of the issue requirements
            - Suggested approach for implementation
            - Potential challenges or considerations
            - Code quality and best practices to follow
            - Security considerations if applicable

            Use `gh pr comment ${{ steps.create-pr.outputs.pr_number }}` to post your review to the pull request.

          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

      - name: Comment on issue with PR link
        if: steps.create-pr.outputs.pr_created == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ steps.final-branch.outputs.branch_name }}';
            const prUrl = '${{ steps.create-pr.outputs.pr_url }}';

            let body = 'ü§ñ **Automated Response**\n\n';
            body += 'A branch and pull request have been automatically created for this issue!\n\n';
            body += `- **Branch:** \`${branchName}\`\n`;
            body += `- **Pull Request:** ${prUrl}\n\n`;
            body += 'Claude is now reviewing the issue and will provide implementation guidance in the PR.\n\n';
            body += 'You can start working on this issue by checking out the branch.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Automated Response**\n\nFailed to automatically create branch, PR, and Claude review for this issue. Please check the workflow logs for details.'
            });
